{"ast":null,"code":"var _jsxFileName = \"/Users/serhatkoyuncu/Desktop/CLARUSWAY/FULL STACK/REACT/28agu21-task-tracker/task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { useState } from 'react';\nimport { initialState } from './store/initialState';\nimport CreateTask from './components/CreateTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState(initialState);\n  const [isTaskBarShowed, setIsTaskBarShowed] = useState(false); //create a task\n\n  const onCreate = task => {\n    const id = Date.now();\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks(prevState => [...prevState, newTask]);\n  }; // Delete task\n\n\n  const onDelete = id => setTasks(tasks.filter(task => task.id !== id)); //toggle done\n\n\n  const toggleDone = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      isDone: !task.isDone\n    } : task));\n  }; //toggle show and hide\n\n\n  const toggleShow = id => setIsTaskBarShowed(prevState => !prevState);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Task Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTask, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: onDelete,\n      toggleDone: toggleDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Task To Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PKpOZb6TV15ZDfcR6H3QjuIk9M8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/serhatkoyuncu/Desktop/CLARUSWAY/FULL STACK/REACT/28agu21-task-tracker/task-tracker/src/App.js"],"names":["Header","Tasks","useState","initialState","CreateTask","App","tasks","setTasks","isTaskBarShowed","setIsTaskBarShowed","onCreate","task","id","Date","now","newTask","prevState","onDelete","filter","toggleDone","map","isDone","toggleShow","length"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACC,YAAD,CAAlC;AACA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,KAAD,CAAtD,CAFa,CAIb;;AACA,QAAMQ,QAAQ,GAAIC,IAAD,IAAU;AACzB,UAAMC,EAAE,GAAGC,IAAI,CAACC,GAAL,EAAX;AACA,UAAMC,OAAO,GAAG;AAAEH,MAAAA,EAAF;AAAM,SAAGD;AAAT,KAAhB;AACAJ,IAAAA,QAAQ,CACLS,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeD,OAAf,CADT,CAAR;AAGD,GAND,CALa,CAab;;;AACA,QAAME,QAAQ,GAAIL,EAAD,IAAQL,QAAQ,CAACD,KAAK,CAACY,MAAN,CAAcP,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAnC,CAAD,CAAjC,CAda,CAgBb;;;AACA,QAAMO,UAAU,GAAIP,EAAD,IAAQ;AACzBL,IAAAA,QAAQ,CACND,KAAK,CAACc,GAAN,CAAWT,IAAD,IACRA,IAAI,CAACC,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGD,IAAL;AAAWU,MAAAA,MAAM,EAAE,CAACV,IAAI,CAACU;AAAzB,KAAjB,GAAqDV,IADvD,CADM,CAAR;AAKD,GAND,CAjBa,CAyBb;;;AACA,QAAMW,UAAU,GAAIV,EAAD,IAAOH,kBAAkB,CAACO,SAAS,IAAI,CAACA,SAAf,CAA5C;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEN;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGJ,KAAK,CAACiB,MAAN,GAAe,CAAf,gBACC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEjB,KAAd;AAAqB,MAAA,QAAQ,EAAEW,QAA/B;AAAyC,MAAA,UAAU,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YADD,gBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALP;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAtCQd,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Header from './components/Header'\nimport Tasks from './components/Tasks';\nimport { useState } from 'react'\nimport { initialState } from './store/initialState';\nimport CreateTask from './components/CreateTask';\n\n\nfunction App() {\n  const [tasks, setTasks] = useState(initialState);\n  const [isTaskBarShowed, setIsTaskBarShowed] = useState(false);\n\n  //create a task\n  const onCreate = (task) => {\n    const id = Date.now();\n    const newTask = { id, ...task }\n    setTasks(\n      (prevState) => [...prevState, newTask]\n    )\n  }\n\n  // Delete task\n  const onDelete = (id) => setTasks(tasks.filter((task) => task.id !== id))\n\n  //toggle done\n  const toggleDone = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, isDone: !task.isDone } : task\n      )\n    );\n  }\n\n  //toggle show and hide\n  const toggleShow = (id) =>setIsTaskBarShowed(prevState => !prevState)\n\n  return (\n    <div className=\"container\">\n      <Header title=\"Task Tracker\" />\n      <CreateTask onCreate={onCreate} />\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={onDelete} toggleDone={toggleDone} />)\n        : (<p>No Task To Show</p>)\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}