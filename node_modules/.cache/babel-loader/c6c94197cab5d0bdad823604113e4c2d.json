{"ast":null,"code":"import _toConsumableArray from\"/Users/serhatkoyuncu/Desktop/CLARUSWAY/FULL STACK/projects/Task-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/serhatkoyuncu/Desktop/CLARUSWAY/FULL STACK/projects/Task-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/serhatkoyuncu/Desktop/CLARUSWAY/FULL STACK/projects/Task-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import Header from'./components/Header';import Tasks from'./components/Tasks';import{useState}from'react';import{initialState}from'./store/initialState';import CreateTask from'./components/CreateTask';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isTaskBarShowed=_useState4[0],setIsTaskBarShowed=_useState4[1];//create a task\nvar onCreate=function onCreate(task){var id=Date.now();var newTask=_objectSpread({id:id},task);setTasks(function(prevState){return[].concat(_toConsumableArray(prevState),[newTask]);});};// Delete task\nvar onDelete=function onDelete(id){return setTasks(tasks.filter(function(task){return task.id!==id;}));};//toggle done\nvar toggleDone=function toggleDone(id){setTasks(tasks.map(function(task){return task.id===id?_objectSpread(_objectSpread({},task),{},{isDone:!task.isDone}):task;}));};//toggle show and hide\nvar toggleShow=function toggleShow(id){return setIsTaskBarShowed(function(prevState){return!prevState;});};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{title:\"Task Tracker\",isTaskBarShowed:isTaskBarShowed,toggleShow:toggleShow}),isTaskBarShowed&&/*#__PURE__*/_jsx(CreateTask,{onCreate:onCreate}),tasks.length>0?/*#__PURE__*/_jsx(Tasks,{tasks:tasks,onDelete:onDelete,toggleDone:toggleDone}):/*#__PURE__*/_jsx(\"p\",{children:\"No Task To Show\"})]});}export default App;","map":{"version":3,"sources":["/Users/serhatkoyuncu/Desktop/CLARUSWAY/FULL STACK/projects/Task-Tracker/src/App.js"],"names":["Header","Tasks","useState","initialState","CreateTask","App","tasks","setTasks","isTaskBarShowed","setIsTaskBarShowed","onCreate","task","id","Date","now","newTask","prevState","onDelete","filter","toggleDone","map","isDone","toggleShow","length"],"mappings":"ikBAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,YAAT,KAA6B,sBAA7B,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,C,wFAGA,QAASC,CAAAA,GAAT,EAAe,CACb,cAA0BH,QAAQ,CAACC,YAAD,CAAlC,wCAAOG,KAAP,eAAcC,QAAd,eACA,eAA8CL,QAAQ,CAAC,KAAD,CAAtD,yCAAOM,eAAP,eAAwBC,kBAAxB,eAEA;AACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAU,CACzB,GAAMC,CAAAA,EAAE,CAAGC,IAAI,CAACC,GAAL,EAAX,CACA,GAAMC,CAAAA,OAAO,gBAAKH,EAAE,CAAFA,EAAL,EAAYD,IAAZ,CAAb,CACAJ,QAAQ,CACN,SAACS,SAAD,qCAAmBA,SAAnB,GAA8BD,OAA9B,IADM,CAAR,CAGD,CAND,CAQA;AACA,GAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACL,EAAD,QAAQL,CAAAA,QAAQ,CAACD,KAAK,CAACY,MAAN,CAAa,SAACP,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYA,EAAtB,EAAb,CAAD,CAAhB,EAAjB,CAEA;AACA,GAAMO,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACP,EAAD,CAAQ,CACzBL,QAAQ,CACND,KAAK,CAACc,GAAN,CAAU,SAACT,IAAD,QACRA,CAAAA,IAAI,CAACC,EAAL,GAAYA,EAAZ,gCAAsBD,IAAtB,MAA4BU,MAAM,CAAE,CAACV,IAAI,CAACU,MAA1C,GAAqDV,IAD7C,EAAV,CADM,CAAR,CAKD,CAND,CAQA;AACA,GAAMW,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACV,EAAD,QAAOH,CAAAA,kBAAkB,CAAC,SAAAO,SAAS,QAAI,CAACA,SAAL,EAAV,CAAzB,EAAnB,CAEA,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,KAAC,MAAD,EAAQ,KAAK,CAAC,cAAd,CAA6B,eAAe,CAAER,eAA9C,CAA+D,UAAU,CAAEc,UAA3E,EADF,CAEGd,eAAe,eAAI,KAAC,UAAD,EAAY,QAAQ,CAAEE,QAAtB,EAFtB,CAGGJ,KAAK,CAACiB,MAAN,CAAe,CAAf,cACC,KAAC,KAAD,EAAO,KAAK,CAAEjB,KAAd,CAAqB,QAAQ,CAAEW,QAA/B,CAAyC,UAAU,CAAEE,UAArD,EADD,cAEI,sCALP,GADF,CAUD,CAED,cAAed,CAAAA,GAAf","sourcesContent":["import './App.css';\nimport Header from './components/Header'\nimport Tasks from './components/Tasks';\nimport { useState } from 'react'\nimport { initialState } from './store/initialState';\nimport CreateTask from './components/CreateTask';\n\n\nfunction App() {\n  const [tasks, setTasks] = useState(initialState);\n  const [isTaskBarShowed, setIsTaskBarShowed] = useState(false);\n\n  //create a task\n  const onCreate = (task) => {\n    const id = Date.now();\n    const newTask = { id, ...task }\n    setTasks(\n      (prevState) => [...prevState, newTask]\n    )\n  }\n\n  // Delete task\n  const onDelete = (id) => setTasks(tasks.filter((task) => task.id !== id))\n\n  //toggle done\n  const toggleDone = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, isDone: !task.isDone } : task\n      )\n    );\n  }\n\n  //toggle show and hide\n  const toggleShow = (id) =>setIsTaskBarShowed(prevState => !prevState)\n\n  return (\n    <div className=\"container\">\n      <Header title=\"Task Tracker\" isTaskBarShowed={isTaskBarShowed} toggleShow={toggleShow} />\n      {isTaskBarShowed && <CreateTask onCreate={onCreate} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={onDelete} toggleDone={toggleDone} />)\n        : (<p>No Task To Show</p>)\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}