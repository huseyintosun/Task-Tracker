{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","store/initialState.js","components/CreateTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","color","toggleShow","className","style","backgroundColor","onClick","Header","title","isTaskBarShowed","Task","task","onDelete","toggleDone","isDone","onDoubleClick","id","cursor","day","Tasks","tasks","map","initialState","CreateTask","onCreate","useState","setText","setDay","onSubmit","e","preventDefault","alert","htmlFor","name","type","placeholder","value","onChange","target","App","setTasks","setIsTaskBarShowed","prevState","Date","now","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af0908de.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Button({ text, color, toggleShow }) {\n    return (\n        <div>\n            <button\n                className=\"btn\"\n                style={{ backgroundColor: color }}\n                onClick={toggleShow}\n            >\n                {text}\n            </button>\n        </div>\n    )\n}\n\nexport default Button\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport Button from './Button';\n\nfunction Header({ title, isTaskBarShowed, toggleShow }) {\n    return (\n        <header className=\"header\">\n            <h1>{title}</h1>\n            <Button\n                color={isTaskBarShowed ? \"steelblue\" : \"purple\"}\n                text={isTaskBarShowed ? \"Hide Create a Task Bar\" : \"Show Create a Task Bar\"}\n                toggleShow={toggleShow}\n            />\n        </header>\n    )\n}\n\n// Header.defaultProps = {\n//     title:\"task tracker as default\"\n// }\n\n// Header.propTypes = {title:PropTypes.string.isRequired}\n\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa';\n\nexport const Task = ({ task, onDelete, toggleDone }) => {\n    return (\n        <div className={`task ${task.isDone ? \"done\" : \"\"}`}\n            onDoubleClick={() =>  toggleDone(task.id) }\n        >\n            <h3>\n                {task.text}\n                <FaTimes\n                    style={{ color: \"red\", cursor: \"pointer\" }}\n                    onClick={() => onDelete(task.id)}\n\n                />\n            </h3>\n            <p>{task.day}</p>\n\n        </div>\n    )\n}","import { Task } from './Task'\n\nfunction Tasks({tasks, onDelete, toggleDone}) {\n\n    return (\n        <div>\n            {tasks.map((task) => (\n                // <h3 key={task.id}>{task.text}</h3>\n                <Task key={task.id} task={task} onDelete={onDelete} toggleDone={toggleDone}/>\n            ))}\n        </div>\n    )\n}\n\nexport default Tasks\n","export const initialState = [\n    {\n      id: 1,\n      text: \"Study React Pre-Class Notes\",\n      day: \"Feb 5th at 2:30pm\",\n      isDone: false,\n    },\n    {\n      id: 2,\n      text: \"Feed the Dog\",\n      day: \"Feb 6th at 1:30pm\",\n      isDone: false,\n    },\n    {\n      id: 3,\n      text: \"Attend in-Class\",\n      day: \"Feb 7th at 20:00pm\",\n      isDone: false,\n    },\n  ];","import {useState} from 'react'\n\nfunction CreateTask({onCreate}) {\n    const [text, setText] = useState('');\n    const [day, setDay] = useState('');\n    const handleTextChange = (e) => setText(e.target.value);\n    const handleDayChange = (e) => setDay(e.target.value);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (!text || !day){\n            alert('Please fill both fields')\n        } else {\n            onCreate({text, day, isDone:false});\n            setText(\"\")\n            setDay(\"\")\n        }\n    }\n\n    return (\n        <div>\n            <form className=\"add-form\" onSubmit={onSubmit}>\n                <div className=\"form-control\">\n                    <label htmlFor=\"task\">Task</label>\n                    <input\n                        id=\"task\"\n                        name=\"text\"\n                        type=\"text\"\n                        placeholder=\"Enter a task name\"\n                    // required\n                    value={text}\n                    onChange={handleTextChange}\n                    />\n                </div>\n                <div className=\"form-control\">\n                    <label htmlFor=\"day\">Day & Time</label>\n                    <input\n                        id=\"day\"\n                        name=\"day\"\n                        type=\"text\"\n                        placeholder=\"Enter a day and time\"\n                    // required\n                    value={day}\n                    onChange={handleDayChange}\n                    />\n                </div>\n                <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\n            </form>\n        </div>\n    )\n}\n\nexport default CreateTask\n","import './App.css';\nimport Header from './components/Header'\nimport Tasks from './components/Tasks';\nimport { useState } from 'react'\nimport { initialState } from './store/initialState';\nimport CreateTask from './components/CreateTask';\n\n\nfunction App() {\n  const [tasks, setTasks] = useState(initialState);\n  const [isTaskBarShowed, setIsTaskBarShowed] = useState(false);\n\n  //create a task\n  const onCreate = (task) => {\n    const id = Date.now();\n    const newTask = { id, ...task }\n    setTasks(\n      (prevState) => [...prevState, newTask]\n    )\n  }\n\n  // Delete task\n  const onDelete = (id) => setTasks(tasks.filter((task) => task.id !== id))\n\n  //toggle done\n  const toggleDone = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, isDone: !task.isDone } : task\n      )\n    );\n  }\n\n  //toggle show and hide\n  const toggleShow = (id) =>setIsTaskBarShowed(prevState => !prevState)\n\n  return (\n    <div className=\"container\">\n      <Header title=\"Task Tracker\" isTaskBarShowed={isTaskBarShowed} toggleShow={toggleShow} />\n      {isTaskBarShowed && <CreateTask onCreate={onCreate} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={onDelete} toggleDone={toggleDone} />)\n        : (<p>No Task To Show</p>)\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}